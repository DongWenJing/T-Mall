<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tmall.mapper.OrderMapper">

    <!--获取全部订单-->
    <select id="findOrderById" resultType="Order">
        select order_number_all,money,create_time,order_status from `order`
        where buy_id=#{buyerId} and order_status &lt; 4
        order by create_time desc
    </select>
<!--获取店铺的全部订单 -->
    <select id="findByPage" resultType="OrderMaster">
        select * from order_master
        where shop_id=#{shopId}
        order by create_time desc
        limit #{offset},#{pageSize}
    </select>
<!-- 查询本店订单条数   -->
    <select id="getCountByShopId" resultType="Integer">
        select count(*) from order_master where shop_id=#{shopId} order by create_time desc
    </select>
<!-- 获取到订单状态   -->
    <select id="getOrderStatus" resultType="Integer">
        select order_status
        from order_master
        where order_number=#{orderNumber}
    </select>
<!-- 修改订单状态   -->
    <update id="sendByOrderNumber">
        update order_master
        set order_status=3
        where order_number=#{orderNumber}
        and shop_id=#{shopId}
    </update>
<!--  取消订单      -->
    <update id="cancel">
        update order_master
        set order_status=2
        where order_number=#{orderNumber}
        and shop_id=#{shopId}
    </update>

    <!--删除订单-->
    <delete id="deleteOrderMaster">
        delete from order_master where shop_id=#{shopId} and order_number=#{orderNumber}
    </delete>


    <!--     //保存订单信息中每一件商品的信息-->
    <insert id="addOrderDetail">
        insert into order_detail(order_number,product_id,count,update_time)
        value (#{orderNumber},#{productId},#{count},#{updateTime})
    </insert>
<!--    !根据用户id获取订单数，可修改为待付款的订单数-->
<!--    SELECT count(*) FROM order_master WHERE buyer_id=#{userId} AND order_status<4-->
    <select id="countt" resultType="OrderMaster">
        select (count(*)) from order_master where buyer_id=#{userId} and order_status &lt; 4
    </select>

    <!--获取该订单下的所有订单-->
    <select id="getOrderNumbers" resultType="java.lang.String">
        select order_number from `order` where order_number_all=#{orderNumberAll}
    </select>

    <!--获取子订单的商家id-->
    <select id="getOrderShopId" resultType="java.lang.Integer">
        select shop_id from order_master where order_number=#{oNumber}
    </select>

    <!--获取order表中总订单号的状态-->
    <select id="getOrderAllStatus" resultType="java.lang.Integer">
        select order_status from `order` where order_number_all=#{orderNumber}
    </select>

    <!--获取该用户在该店的订单号(已完成)-->
    <select id="getOrderNumbersByUS" resultType="java.lang.String">
        select order_number from order_master where buyer_id=#{userId} and shop_id=#{shopId}
        and order_status=3
    </select>

    <!--查询已购买的商品-->
    <select id="getProductIdByON" resultType="java.math.BigInteger">
        select product_id from order_detail where order_number=#{orderNumber}
    </select>

    <!--获取每个订单的收入-->
    <select id="getOrderAmount" resultType="java.lang.Double">
        select order_amount from order_master where order_number=#{orderNumber}
    </select>

    <!--获取用户id-->
    <select id="getOrderUserId" resultType="java.math.BigInteger">
        select buyer_id from order_master where order_number=#{orderNumber}
    </select>

    <!--获取用户订单金额-->
    <select id="getOrderMoney" resultType="java.lang.Double">
        select order_amount from order_master where order_number=#{orderNumber}
    </select>

    <!--获取订单总金额-->
    <select id="getOrderAllMoney" resultType="java.lang.Double">
        select money from `order` where order_number_all=#{orderNumberAll}
    </select>

    <!--获取用户id-->
    <select id="getOrderUserIdByONA" resultType="java.math.BigInteger">
        select buy_id from `order` where order_number_all=#{orderNumberAll}
    </select>

    <!--取消该订单-->
    <update id="cancel1">
        update order_master set order_status=2 where order_number=#{s}
    </update>

    <!--修改该订单的状态-->
    <update id="updateStatus">
        update `order` set order_status=#{status} where order_number_all=#{orderNumberAll}
    </update>

    <!--更新子订单的状态-->
    <update id="updateChildOrderStatus">
        update order_master set order_status=#{status} where order_number=#{orderNumber}
    </update>

</mapper>